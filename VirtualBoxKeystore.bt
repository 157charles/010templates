//--------------------------------------
//--- 010 Editor v6.0.2 Binary Template
//
// File:        VBOXDIEKeyStore.bt
// Author:      Daniel Correa
// URL:         http://www.sinfocol.org/
// Revision:    1.0
// Purpose:     Template for VirtualBox Disk Image Encryption KeyStore
//--------------------------------------
typedef struct vbox_die_keystore {
    int header <bgcolor=0xaabbcc, format=hex, name="Header">;
    if (header != 0x454E4353) {
        SetBackColor(0x0000ff);
        Warning("File is not a valid VBOX DIE KeyStore. Bad signature.");
        return -1;
    }
    uint16 version <bgcolor=0xccddee, name="Version">;
    char algorithm[32] <bgcolor=0x00ffee, name="EVP encryption algorithm">;
    char kdf[32] <bgcolor=0xffbbee, name="Key derivation function hash algorithm">;
    int generic_key_length <bgcolor=0x3399ee, name="Generic key length">;
    char final_hash[32] <bgcolor=0x4444ff, name="Final hash">;
    int pbkdf2_2_key_length <bgcolor=0x3399ee, name="Second PBKDF2 key length">;
    char pbkdf2_2_salt[32] <bgcolor=0x999999, name="Second PBKDF2 salt">;
    int pbkdf2_2_iterations <bgcolor=0xaa9933, name="Second PBKDF2 iterations">;
    char pbkdf2_1_salt[32] <bgcolor=0x999999, name="First PBKDF2 salt">;
    int pbkdf2_1_iterations <bgcolor=0xaa9933, name="First PBKDF2 iterations">;
    int evp_decrypt_input_length <bgcolor=0x3399ee, name="EVP decrypt input length">;
    char pbkdf2_2_encrypted_password[64] <bgcolor=0xff7777, name="Second PBKDF2 encrypted password">;
};
FSeek(0);
LittleEndian();
vbox_die_keystore VBOXDIE;